SETTING UP THE WEB SITE

Various perl libraries, as described in the PaperBLAST code base. This
includes CGI and BioPerl.

sqlite3 must be installed

bin/ cgi/ lib/ should match the code repository

The bin directory must include these executables:
mmseqs (for mmseqs2), we use version 7b95387f93e38c3911f9188bc702d63ed3194013
lastal and lastdb (for LAST), we use version 1422
  code at https://gitlab.com/mcfrith/last
muscle3, we use version 3.8.31
FastTree, we use version 2.1.11 SSE3

The bin/blast directory must include the (original) BLAST executables
formatdb, blastall, and bl2seq; we use version 2.2.26

The bin/blast+ directory must include the BLAST+ executables
makeblastdb and blastp; we use 2.13.0+

The tmp/cache/ and tmp/hits/ subdirectories
must exist and be writable by the web server.

The PaperBLAST code base must be installed in the parent directory --
i.e., if the cgi scripts are in parent/neighbor/cgi
then the PaperBLAST libraries must be in parent/PaperBLAST/lib

The data/ subdirectory must include neighbor.db, mmseqsdb*, and
neighbor.faa.gz (created by the bin/build.pl script). It can also have
a 1-line file, gtdb.version, to show which release of GTDB it is based
on.

The bin directory must include the mmseqs2 executable (named mmseqs).

To fetch identifiers from the fitness browser, neighbor/fbrowse_data
must include the fitness browser database (both sqlite and
blast). This will also require that the bin/blast directory include
the executable fastacmd.

If sub-databases are being used, then for each row in SubDb in the
main database, the data should be in data/prefix/ with the files
sub.db, clusters.faa.gz, cluster.faa.plusdb.* (BLAST+ databases), and
neighbor.faa.gz (created by the bin/buildSubDbs.pl script).

Optionally, use the motd file to show a "message of the data" at the
top of the main page and some other pages.

For the tblastn feature of the blastGenome.cgi to work, the fasta
files for the genome sequences must be in ind/refseq_{gid}.fna (these
will be created by fetchAssemblies.pl, see below).

BUILDING THE MAIN DATABASE

You can download the main database and the sub-databases from the
fast.genomics web site. If you want to build it yourself, the first
step for building the main database is to select which representative
genomes to include. Then, run

bin/fetchAssemblies.pl -table top.tsv -dir ind
bin/build.pl -genomes top.tsv -fetched top.tsv.fetched -in ind -out data -k 6

top.tsv can be built from the GTDB tables and must include the
fields accession (like RS_GCF_003096835.1 or GB_GCA_001487125.1),
fetch (with the RS_ or GB_ prefix removed; this is not included in
GTDB's tables), ncbi_assembly_name, ncbi_strain_identifiers,
gtdb_taxonomy, and ncbi_taxonomy. 

ind is a directory into which all the assemblies will be downloaded.

For fastest performance of homology searches, run build.pl with kmer
size 6 (-k 6).

Also, to ensure that mmseq's index is kept in main memory, run
  mmseqs touchdb data/mmseqsdb
once an hour. (build.pl runs this step, so you need not do it
initially.) To speed up queries against sub-databases, you may
also want to run
  bin/touchSubDbs.pl -all -fraction 0.00003
every so often.

BUILDING THE SUB-DATABASES

The steps for building the sub-databases are:

bin/fetchAssemblies.pl -table all.tsv -dir ind

bin/buildSubDbs.pl -genomes all.tsv -in ind -out data -nCPUs 40

sqlite3 data/neighbor.db <<END
.mode tabs
DELETE FROM SubDb;
.import data/SubDbs.tsv SubDb
END

bin/buildAllGenome.pl -dir data

(buildAllGenome.pl will load the AllGenomes table into a database file
that was previously built using build.pl)

BUILDING THE UNIPROT KMER DATABASE

Fast searching for nearly-identical hits to UniProt
(bestHitUniprot.cgi) requires a separate database. This can be built
using

bin/buildUniKmer uni

It will create the uni/ subdirectory and populate it with the
UniProtKB fasta file (sorted.faa, with duplicate sequences removed)
and the kmer database (sorted_kmer.db). As of May 2024, these require
190 GB of disk space (but they do not need do to be kept in
memory). Building them requires another ~10 GB of space in the
temporary directory (either $TMPDIR or /tmp).

For the best-hit uniprot tool to work (bestHitUinprot.cgi or
searchKmerSeekDb.pl), bin/usearch must be the usearch
executable. The free 32-bit version will work fine.
